"{\"body\": {\"contextId\": \"01DNP85SACBD70V07AYNNSF835\", \"mindId\": \"01DAATBC3AK1QWC5NYC5AHV2XZ\", \"instanceId\": \"632f2682-b2ea-4137-86ce-6ccd34c2fe94\", \"segments\": [{\"id\": \"075eac14c9b044b4abc8b95185f54cbd\", \"originalText\": \"Team, let's take an action item to follow up with the meeting next week to look into this paper in more detail. \", \"confidence\": 0.8050194, \"startTime\": \"2019-11-27T09:01:12Z\", \"endTime\": \"2019-11-27T09:01:22Z\", \"duration\": 10, \"recordingId\": \"83e6698d0edf46588de44ea593e1ce03\", \"spokenBy\": \"8fff81b5b2f14aa5ad67405f3e8127f3\", \"languageCode\": \"en-IN\", \"transcriber\": \"google_speech_api\", \"status\": \"completed\", \"transcriptId\": \"48d3718d-4865-4878-b6e5-2279ca604d64\", \"isEndOfSentence\": true, \"createdAt\": \"2019-11-27T09:01:23.260510335Z\", \"updatedAt\": \"2019-11-27T09:01:44.333187757Z\", \"deletedAt\": null, \"deleted\": false}, {\"id\": \"34be185d84be49698d18782f03a9c15d\", \"originalText\": \"Interesting paper on merge herbal replicated data types last time out. We saw how much people recorded data types use a bijection between natural domain of a data type relational sets to Define merge semantics between two concurrent three modified versions given their lowest common ancestor today. We are picking up in the section 4 of the paper starting with how to derive a merge function for An arbitrary data type. Okay. Hey Colin. Can you read up on this paper and see if you can generate a sum of D for this for our review next week? \", \"confidence\": 0.8786754649999999, \"startTime\": \"2019-11-27T08:59:26Z\", \"endTime\": \"2019-11-27T09:00:09Z\", \"duration\": 43, \"recordingId\": \"2e3107014c90483c8e55236fb3750ef3\", \"spokenBy\": \"8fff81b5b2f14aa5ad67405f3e8127f3\", \"languageCode\": \"en-IN\", \"transcriber\": \"google_speech_api\", \"status\": \"completed\", \"transcriptId\": \"48d3718d-4865-4878-b6e5-2279ca604d64\", \"isEndOfSentence\": false, \"createdAt\": \"2019-11-27T09:00:10.40632732Z\", \"updatedAt\": \"2019-11-27T09:00:31.775783554Z\", \"deletedAt\": null, \"deleted\": false}, {\"id\": \"5d2c09bef81e4a90956542914c54de79\", \"originalText\": \"Innovation of the Clock Store is the use of storage layer that exposes a get like API supporting common guitar operation such as cloning a remote repository for king of branches and merging branches using a three-way merge function. It's implemented as content addressable Block store to maximize the potential for sharing between different versions of the data structures. The author's reference a paper Version Control for your data to For the details of the store, but TBH there isn't a ton of detail on the store there either. The Karthik I think this will help us fix our production issue with versioning. Can you see if this can help us? \", \"confidence\": 0.7448233333333333, \"startTime\": \"2019-11-27T09:00:20Z\", \"endTime\": \"2019-11-27T09:01:07Z\", \"duration\": 47, \"recordingId\": \"44d3425099d84cd9be899fd3c627e9f7\", \"spokenBy\": \"8fff81b5b2f14aa5ad67405f3e8127f3\", \"languageCode\": \"en-IN\", \"transcriber\": \"google_speech_api\", \"status\": \"completed\", \"transcriptId\": \"48d3718d-4865-4878-b6e5-2279ca604d64\", \"isEndOfSentence\": false, \"createdAt\": \"2019-11-27T09:01:08.124981858Z\", \"updatedAt\": \"2019-11-27T09:01:29.571114173Z\", \"deletedAt\": null, \"deleted\": false}]}}"