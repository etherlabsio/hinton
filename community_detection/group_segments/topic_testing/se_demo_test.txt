{
"body":{
        "contextId": "01DBCR0S832GDJS7NGF9YW11WH",
        "mindId": "01DAAQY88QZB19JQZ5PRJFR76Y",
        "instanceId": "09a7b434-8325-4759-8588-7494b8b41f7e",
        "segments": [
            {
                "id": "2a92aaca3087453a8e3fcb36ba0617e4",
                "originalText": "Welcome to text with you. Services from this 23 terabyte server in an upcoming video before we get started. We have to go over Docker. Thank you to hover.com for sponsoring this episode. You can get 10% off your own custom domain name at hover.com forward slash text with what is dr. Tucker is mainly a software development platform and kind of a virtualization technology that makes it easy for us to develop and deploy apps inside of neatly packaged virtual containerized in arms meaning apps from the same no matter where they are or what machine they're running South Africa. Winters can be deployed to just about any machine without any compatibility issues. So your software say is a system agnostic making software simpler to use less work to develop and easier to maintain these containers running on your computer or server act like little micro meters each with very specific jobs each with their own operating system their own isolated CPU processes memory and network resources and because of this they can be easily added removed stopped and started again without affecting each other or those machines containers. Usually run one specific tasks such as a a mySQL database or a node.js application and then their Network together and potentially scaled the developer will usually start by accessing the docker Hub and online Cloud repository of Docker containers and put one containing a pre-configured environment for their specific programming languages such as Ruby or node js with all the files. Works needed to get started. Let me just get experienced doctor as well using containers for popular apps like Plex Media Server X cloud and many other open-source apps and tools many of which we will be installing in upcoming videos. So far is a form of virtualization but unlike virtual machines. The resources are shared directly with the host. This allows you to run many Docker containers where you may only be able to run a few virtually you see a virtual machine has to quarantine office set amount of resources hard drive space memory and processing power emulate hardware and then Bhutan entire operating system Mmm, then the VM communicates with the host computer via a translator application running on the host operating system called a hybrid. ",
                "confidence": 0.817536602857143,
                "startTime": "2019-10-31T11:37:34Z",
                "endTime": "2019-10-31T11:39:34Z",
                "duration": 120,
                "recordingId": "9357d3e315f145bd82de884818d401e7",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:39:37.752427248Z",
                "updatedAt": "2019-10-31T11:40:39.481192279Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "7ecdc8ab1b25466389b284328432e5fe",
                "originalText": "Docker communicates natively with the system Peril by passing the middleman on Linux machines and even Windows 10 and Windows Server 2016 and above this means you can run any version of Linux in the container and it will run natively. Not only that doctor uses less disk space to as it is able to reuse files efficiently by using a layered file system. If you have multiple Docker images using the same beats image for instance Docker will only keep a single copy of the files needed and share them with each container. All right. So how do we use Docker install Docker on your machine and will provide links in the description begin with Machine built into a Docker image which can be run as a Docker container. Okay, let's break that down. The dockerfile is a surprisingly Simple Text document that instructs how the docker image will be built like a blueprint you first select a base image to start with using the from keyword, which you can find a container to use from the docker Hub. Like we mentioned before a bun to an Alpine Linux are popular choices from there. You can run commands. It's downloading installing and running your software. Of course pulling the docks below once their Docker file is complete. We can build it using Docker build followed by the T Flex. We can name our image and pass our commands the location of the dockerfile once complete. You can verify your images existence with Docker images. Now your build image can run a container of that image or you can push it to the cloud to share with others. Speaking of sharing with others. If you don't create your own Docker image and you just want to use a premade one component from the docker hub using Docker bowl and the image name. You may also include the tag if one is available which may specify a version or variants of the software. If you don't specify a tag the latest version will be what snatched to run a container pulled down from the docker Hub rebuild the image and then enter Docker run followed by the image name. There are of course many options available when running your containers such as running a batch mode to catch D or assigning ports for web services. You can view your run. Tanner's with Docker container LS and as you add more envelope, you're here running a single container is fun, but it's annoying to enter all of these commands to get a container running and we may want to control several containers as part of a single application such as running an app and a database together something you might want to do. ",
                "confidence": 0.8654147739999999,
                "startTime": "2019-10-31T11:39:34Z",
                "endTime": "2019-10-31T11:41:34Z",
                "duration": 120,
                "recordingId": "b30230f8e6514426b8890e4715300f4a",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:41:37.433027687Z",
                "updatedAt": "2019-10-31T11:42:39.226367771Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "42a8ca6832fa49f091636761e27a97a6",
                "originalText": "positive ",
                "confidence": 0.7221245,
                "startTime": "2019-10-31T11:36:34Z",
                "endTime": "2019-10-31T11:36:41Z",
                "duration": 7,
                "recordingId": "4ca416b3c2744f6c817777be4e4ac292",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:36:42.092975516Z",
                "updatedAt": "2019-10-31T11:37:03.226056384Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "1046066800b94ecd9c9b4cc1be7128ef",
                "originalText": "The fundamental premise behind kubernetes is that we can enforce what's called desired state. management ",
                "confidence": 0.806833725,
                "startTime": "2019-10-31T11:52:50Z",
                "endTime": "2019-10-31T11:53:05Z",
                "duration": 15,
                "recordingId": "f098edf9376b481686ef97698a67d0b3",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:53:06.524031088Z",
                "updatedAt": "2019-10-31T11:53:27.582442555Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "4509b82272884ffa83a98207f49232f0",
                "originalText": "ran to on adjuster ",
                "confidence": 0.69474393,
                "startTime": "2019-10-31T11:36:46Z",
                "endTime": "2019-10-31T11:36:51Z",
                "duration": 5,
                "recordingId": "726fdaf4e59947e39f0ebb094a8c228a",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:36:52.223440969Z",
                "updatedAt": "2019-10-31T11:37:13.5827548Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "28f3cab2712c4d47adca732c1ba9e9dd",
                "originalText": "I'm getting any product I left. ",
                "confidence": 0.73383826,
                "startTime": "2019-10-31T11:36:52Z",
                "endTime": "2019-10-31T11:36:56Z",
                "duration": 4,
                "recordingId": "77064b51917e457c80bedeed21e0d719",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:36:56.219739608Z",
                "updatedAt": "2019-10-31T11:37:17.416356339Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "8ffc7a0ca22d4b6c8bad85c557dda13f",
                "originalText": "agree they're only 3 product and ",
                "confidence": 0.7164569000000001,
                "startTime": "2019-10-31T11:36:11Z",
                "endTime": "2019-10-31T11:36:17Z",
                "duration": 6,
                "recordingId": "44a5ae75e0e34dc89c4f5e3dd28a2366",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:36:18.241018828Z",
                "updatedAt": "2019-10-31T11:36:39.430387972Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "4d54db4469fc4dd2932cd5aeefbf31dc",
                "originalText": "The Waitresses, don't run ",
                "confidence": 0.6468636,
                "startTime": "2019-10-31T11:36:21Z",
                "endTime": "2019-10-31T11:36:34Z",
                "duration": 13,
                "recordingId": "044c6c7e6ddf4925b34b4acced8f5a28",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:36:34.991547866Z",
                "updatedAt": "2019-10-31T11:36:56.077215935Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "7a5c1f2643d6441c81438d8b181f2099",
                "originalText": "It easy to build applications that respond quickly to new information to learn more about AWS Lambda visit our website and you can get your first Lambda function up and running with a few clicks in the AWS Management console. And with the AWS free tier. You can try Lambda for free. ",
                "confidence": 0.9128383,
                "startTime": "2019-10-31T11:45:34Z",
                "endTime": "2019-10-31T11:45:53Z",
                "duration": 19,
                "recordingId": "82ca9348f75e48ca8d1746f8d84729f1",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:45:54.812816192Z",
                "updatedAt": "2019-10-31T11:46:16.092985338Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "82a5ec93aa3640b4a31bec7b4736f617",
                "originalText": "It's run WordPress for example, and we're going to be accomplishing that with Docker compose in our next video where we build a 23 terabyte Home Server. If you are going to have a secure Home Server, you have to get yourself a domain name for SSL. So you can access that server anywhere in the world. Thank you to hover.com for supplying you with 10% off your first domain name by visiting hover.com forward slash text with check out there find a domain name tool to find cool domain names with cool extensions. And since we're building a home server, let's just type that in and see what we get when we put some domains on the screen is currently available that are Related to Home Server get him now while they're available and make sure you get that 10% off and support the show again. My go-to hover.com or slash text with thank you for watching. Let me know if you'd be interested in a part two we go deeper into Docker will go over some of the specifics of Docker layers and so on and stick around coming up we're building at twenty three terabyte server using Docker compose. If you have any questions come chat with us on Discord the link to that and everything else you need is in the description below. All right. Thank you and I'll see you in the next video. Yeah. When you're building applications, you want them to deliver a great experience for your users. Maybe you want your application to generate in-app purchase options during a gaming session rapidly validate Street. S updates or make image thumbnails available instantly after a user uploads photos. to make this magic happen your application needs back-end code that runs in response to events, like image uploads in app activity website clicks or sensor outputs, but managing the infrastructure to host and execute back-end code requires you to size provision and scale a bunch of servers managed operating system updates apply security patches and then monitor all ",
                "confidence": 0.8361797340000001,
                "startTime": "2019-10-31T11:41:34Z",
                "endTime": "2019-10-31T11:43:34Z",
                "duration": 120,
                "recordingId": "430d303d441247a3a1338a151eaacc2c",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:43:35.88424364Z",
                "updatedAt": "2019-10-31T11:44:37.458234752Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "a1a8e71c9300436b928d1a8e50e2d6cc",
                "originalText": "Infrastructure for performance and availability wouldn't it be nice? If you could just focus on building great applications without having to spend lots of time managing servers introducing AWS Lambda AWS. Lambda is a compute service that runs your back-end code in response to events such as object uploads to Amazon S3 buckets updates to Amazon dynamodb tables data in Amazon Kinesis streams or in app activity. Once you upload your code to Lambda the service handles all the capacity scaling patching and administration of the infrastructure to run your code and provides visibility into performance by publishing real-time metrics and logs to Amazon cloudwatch. All you need to do is write the code. Aw is Lambda is very low cost and does not require any upfront investment when you use AWS Lambda You're simply charged a low fee per request and for the time your code runs. Increments of 100 milliseconds getting started with AWS. Lambda is easy. There are no new languages tools or Frameworks to learn you can use any third-party Library even native ones. The code you run on AWS. Lambda is called a Lambda function you just upload your code as a zip file or design it in the integrated development environment and the AWS Management console. Or you can select from a list of function samples pre-built for common use cases such as image conversion file compression and change notifications and built-in support for the AWS SDK makes it easy to call other AWS Services. Once your function is loaded you select the Event Source to monitor such as an Amazon S3 bucket or Amazon dynamodb table and within a few seconds. Lambda will be ready to trigger your function automatically when an event occurs. With Lambda any event can trigger your function. ",
                "confidence": 0.8660186900000001,
                "startTime": "2019-10-31T11:43:34Z",
                "endTime": "2019-10-31T11:45:34Z",
                "duration": 120,
                "recordingId": "1b9836aaa1c24b5ead880e11373ae283",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:45:35.735012837Z",
                "updatedAt": "2019-10-31T11:46:37.351999307Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "d8529b210c1e4de48d18fb596f15cebd",
                "originalText": "Current query language SQL pronounced as SQL or sometimes as SQL is actually the standard language for dealing with relational databases SQL can be effectively used to insert search update and delete database records. That doesn't mean SQL cannot do things beyond that. In fact, it helps in optimizing and maintenance of databases and much more relational database. Aces like MySQL Oracle mssql sybase Etc. Use SQL SQL syntax is used in these databases are almost similar except the fact that some databases use different syntaxes and even proprietary SQL syntax has an example of an SQL statement select star from Members. Where age is greater than 30. dbms stands for database management system We have four major types of dbms is called hierarchical Network relational and object-oriented. The most widely used dbms is the relational model the saves data in table format. It uses SQL as the standard query language SQL is the standard language used to query a database the database approach has many advantages when it comes to storing data compared to the traditional flat file based systems. ",
                "confidence": 0.80548514,
                "startTime": "2019-10-31T11:50:26Z",
                "endTime": "2019-10-31T11:52:07Z",
                "duration": 101,
                "recordingId": "0624b15ac7b34ac1b82dde30a50fe531",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:52:10.923812733Z",
                "updatedAt": "2019-10-31T11:52:52.781564059Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "05bcd4c54f8d4e2d96bebd0892428cc1",
                "originalText": "Charles Bachman's integrated data store or IDs is said to be the first dbms in history with time database Technologies evolved a lot while usage and expected functionalities of databases have been increased immensely types of dbms. Let's see how the dbms family evolve with I'm the following diagram shows the evolution of dbms categories. ",
                "confidence": 0.8103257150000001,
                "startTime": "2019-10-31T11:47:57Z",
                "endTime": "2019-10-31T11:48:29Z",
                "duration": 32,
                "recordingId": "472b577091714bda82e0b7cf0637b191",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:48:30.332995878Z",
                "updatedAt": "2019-10-31T11:48:51.500066615Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "c41c87b0f10e4a01b65a5680a5c4cc53",
                "originalText": "Inside this there can be a whole bunch of configuration information. I am going to bypass quite a bit of it, but I'm going to talk about two fundamental pieces the first of which in this deployment file. ",
                "confidence": 0.90519065,
                "startTime": "2019-10-31T11:54:26Z",
                "endTime": "2019-10-31T11:54:39Z",
                "duration": 13,
                "recordingId": "17b4acaef920469b8cb3f7ab7df38894",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:54:40.230725107Z",
                "updatedAt": "2019-10-31T11:55:01.301123977Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "ffd7f630ec5e49eeaf2e6edec444afff",
                "originalText": "Come to this tutorial series SQL and database. But before we learn about database, let's understand. What is data? It's simple words data can be faxed related to any object in consideration. For example, your name age height weight Etc are some data related to you a picture image file PDF Etc can all be considered data. Now, what is a database? We already know what data is but this data could be random a database is the systematic collection of Since the data in a database is organized. It makes data management easy. What is a database management system dbms database management system or dbms collection of programs which enables its users to access a database manipulate data and help in the representation of data. It also helps control access to the database by various users. Let's discuss a few. Apples and online telephone directory would definitely use database management system to store data pertaining to people phone numbers and other contact details. Your electricity service provider is obviously using a dbms to manage billing client related issues to handle fault data Etc. Let's consider the Facebook. It needs to store manipulate and present data related to members their friends member activities messages advertisements and a lot more we can provide countless numbers of examples for usage of dbms. It is Management systems are not A New Concept. It is such a bit first implemented in the 1960s. ",
                "confidence": 0.8713427185714286,
                "startTime": "2019-10-31T11:45:56Z",
                "endTime": "2019-10-31T11:47:57Z",
                "duration": 121,
                "recordingId": "87c24b8ece364a8faf81bb1babf8528b",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:47:59.322354277Z",
                "updatedAt": "2019-10-31T11:49:01.10826044Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "8e8c89b67dd14762ab6fd92b16521681",
                "originalText": "Four major types of dbms. Let's look at into them in detail hierarchical this type of DBS employs the parent-child relationship of storing data this type of DMS is rarely used nowadays is structure is like a tree with nodes representing records and branches representing fields. The Windows registry used in Windows XP is an example of a hierarchical database. Configuration settings are stored as tree structures with nodes Network dbms. This type of dbms supports many to many relationships this usually results in complex database structures RDM server is an example of a database management system that implements the network model relational dbms. This type of dbms defines database relationships in forms of tables also known as relations unlike the network dbms. Rdbms does not support many to many. Should ships relational dbms usually have predefined data types that they can support. This is the most popular dbms type in the market examples of relational database Management Systems include MySQL Oracle and Microsoft SQL Server object-oriented relational dbms this type support storage of new data types. The data to be stored is in the form of objects the objects to be stored. In the database have attributes for example gender or age and methods that Define what to do with the data postgresql is an example of object-oriented relational dbms. So what is SQL? ",
                "confidence": 0.8520474299999999,
                "startTime": "2019-10-31T11:48:30Z",
                "endTime": "2019-10-31T11:50:25Z",
                "duration": 115,
                "recordingId": "730dabd8e93048b79af67c21e20d3216",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:50:29.015216798Z",
                "updatedAt": "2019-10-31T11:51:30.753640703Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "b52631ffc79747f893dd0c95f47bd2a6",
                "originalText": "And this whiteboard session is all about giving kubernetes to you in five minutes, and it's going to be a little bit of a challenge. So I'm going to have to brush over a lot of detailed Concepts and kubernetes, but I want to get a rough idea of what is it? And what does it actually do and what is responsible for four? So there's a few different Architectural Components to it, which I'm going to talk about the first of which is the kubernetes cluster. ER services ",
                "confidence": 0.6598436566666667,
                "startTime": "2019-10-31T11:52:16Z",
                "endTime": "2019-10-31T11:52:50Z",
                "duration": 34,
                "recordingId": "cbcd34783b7f42118e1104d0de7bc9d1",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:52:51.715288577Z",
                "updatedAt": "2019-10-31T11:53:12.845728442Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "adc2b79f90084ed0b5b9a4dd9ce3dfb7",
                "originalText": "A pod configuration in a pot is like the smallest unit of deployment in kubernetes in terms of the kubernetes object model and what it means is that in a pod. I can have running containers and you can have one or more. So in order to run that pot I need to specify some sort of container. image maybe I want to have to container images and further down the line. There's other things like what TCP port and were Services running or what not. But the other additional thing is that I'm going to specify how many of these pods need to be running here. So maybe there's three four pod. Number one. I can also lists additional pod. So here's pod these different color. So pod number two and I basically have container image number three and then replicas. My configuration file equal to what happens I will take this deployment file. I will feed it to the API and it will with up you'll be up to the club. Schedule these pods in the environment and make sure that I have the right number of PODS running. So I feed this file over here. Let's work on pot one. So I'm going to have pod one. Replica one pod one replica to pod one. Replica 3 in addition. I've also got my iPod to so here we are. Pod to replica one and in this case. We only have two replicas here. So let's just do pod one replica to here. And so you can see at any point in time. The cluster service is a responsible to make sure that configuration is running across all of my container host short or my workers. So what is what do unique scenario that happens your what happens if ",
                "confidence": 0.8279986528571429,
                "startTime": "2019-10-31T11:54:40Z",
                "endTime": "2019-10-31T11:56:40Z",
                "duration": 120,
                "recordingId": "dc67c582c9bc4c17966deb9049339f03",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:56:42.716301397Z",
                "updatedAt": "2019-10-31T11:57:44.467532201Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "ae03404e4fe74f3998fb5b443be4c25c",
                "originalText": "As a Clearinghouse that not only keeps track of changes but also communicates with other symptoms about those changes using webhooks and apis. to get started setting up support integrating GitHub with the tools you love there's a github.com business to learn more. ",
                "confidence": 0.87872841,
                "startTime": "2019-10-31T12:01:41Z",
                "endTime": "2019-10-31T12:01:59Z",
                "duration": 18,
                "recordingId": "0203c6cda1e3460eabe57ecac6eb6872",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T12:02:00.094622529Z",
                "updatedAt": "2019-10-31T12:02:21.157103971Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "c0d33c1a5ed64b60aa3597d90c7ff7c2",
                "originalText": "Really what that means is that I'm going to feed the cluster Services a specific configuration and it will be up to the cluster services to go out and run that configuration in my infrastructure. Okay, one of the main components that I do want to call out is this API that sits in front of all this new API services. So there's one building block of the system the second building block of the system is this thing called a worker? And what is a A worker. Well, the worker is really just a container host. The one thing unique about a worker or the container host in a kubernetes environment is that it does have this couplet process that runs which is responsible for communicating with yes. You guessed it the kubernetes cluster services. And so this whole thing the cluster Services the workers themselves, that's what makes up this quote-unquote kubernetes cluster. So let's talk about the use case here. So in this case, what we want to do is go to feed this the configuration so the desired state so to spank exist here in employment demo file. So here I'm just going to call it application one dot yell. ",
                "confidence": 0.8914447000000001,
                "startTime": "2019-10-31T11:53:06Z",
                "endTime": "2019-10-31T11:54:26Z",
                "duration": 80,
                "recordingId": "fcfa903055114ce782fd691ad742b3f6",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:54:28.432616521Z",
                "updatedAt": "2019-10-31T11:55:09.879958506Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "008f2918257e473c8f4bd41678683764",
                "originalText": "The workers whoops that will be hot one in this case. This is replica. So, this is kind of the basics of kubernetes five minutes. Hope you enjoyed it. Stay tuned for more like word sessions on the subject of kubernetes with Photon platform. Thanks. ",
                "confidence": 0.83537495,
                "startTime": "2019-10-31T11:57:09Z",
                "endTime": "2019-10-31T11:57:36Z",
                "duration": 27,
                "recordingId": "7c7f188d8eb04910ba53f5f704da2f91",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:57:37.781577173Z",
                "updatedAt": "2019-10-31T11:57:58.951391497Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "d5936dd5d0e2494cacbe85c3331bcdf8",
                "originalText": "I lose a worker now my running configuration because that pot is now dead by running configuration does not match this and it's up to the kubernetes cluster Services through the cumulative process that's running to notify me a bad hand to understand what's actually running. So what I've done is I actually drop this pod one replica to so therefore this killer has to make a scheduling decision on where I ",
                "confidence": 0.89448094,
                "startTime": "2019-10-31T11:56:40Z",
                "endTime": "2019-10-31T11:57:08Z",
                "duration": 28,
                "recordingId": "aaa4bb857724477aa9c76e0f3765c232",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:57:09.27689107Z",
                "updatedAt": "2019-10-31T11:57:30.462534397Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "70fa1c00915740868b0b234d8c37297e",
                "originalText": "it looks less and less this inevitable Divergence can Zoom challenges that can introduce bugs create bottlenecks or even bring development to Italy Testing using a dedicated server or CI service whenever developer adds you work to a branch the server will automatically build and test the code to determine whether it works and integrated with the code on the main development Branch. The CI server will produce output contain the results of the build and an indication of whether or not the ranch houses all the requirements for integration into the main development Branch by exposing build and test information for every comment on every Branch CI paves the way for what's known as control. Or as well as a related process called continuous deployment. So what's the difference between continuous delivery and continuous deployment continuous delivery is the practice of developing software in such a way that you could release it at any time when coupled with CI continuous delivery lets you develop features with modular code and more manageable increments continuous deployment is an extension of continuous delivery. It's a process allows you to actually deploy really develop features into Action with confidence and experience with any jail time. Yeah, let's take a look at how GitHub fits into this process will take it one step at a time starting with C. I get how it is like a Clearinghouse for your code developers make changes locally and push those changes to get up and they want to share them with others with CI. ",
                "confidence": 0.815651366,
                "startTime": "2019-10-31T11:57:41Z",
                "endTime": "2019-10-31T11:59:41Z",
                "duration": 120,
                "recordingId": "403975fd0cf94d9bb35c283209642343",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T11:59:44.177547468Z",
                "updatedAt": "2019-10-31T12:00:45.600403571Z",
                "deletedAt": null,
                "deleted": false
            },
            {
                "id": "56dcb2660ac2435bafb50ad12064a5bf",
                "originalText": "That's the CI server so it can determine whether or not they will integrate with the currently development Branch. But how does he even know about them it helped use disorder called metal hooks to send messages to external systems about activity and events of the Korean products for each event type. You can specify the subscribers who should receive the message about the event. In this case. We can subscribe our CI server to receive a message anytime. Someone pushes code to a branch or opens all requests on GitHub this CI server will parse the message from GitHub rather current copy of the project built in the branch and run the tests when the CI server finishes its processes for the current commit. It sends a message to get Hub status API containing status information about commit GitHub uses that message to display information about the committee and can even link back to more detailed information on the sky server. This helps give you a clearer idea which changes can be integrated into the main development plan and which ones need a bit more work. Continuous deployment Works in a similar way you can often configure your CI server to avoid crashes as part of its processes in a simple set up anytime. The master Branch receives a new commit to see i provider grab some current object project and deploys the master Branch production step for this type of deployment will vary depending on your provider if your project requires Portland Billy you have also exposes that It lets you create custom deployments from ranches tags or comments. You can use the deployments API in conjunction webhooks automatically notified third-party systems, which can then retrieve a copy of the code from GitHub and deploy the version you request the environment you specify so let's review all about one more time continuous integration is a workflow strategy in Lyon to help you pay shorter. You code will integrate into the current version of the software continuous delivery is developing some where that could be released at any time get up puts your code in the center of your development ecosystem by Sir. ",
                "confidence": 0.789647854,
                "startTime": "2019-10-31T11:59:41Z",
                "endTime": "2019-10-31T12:01:41Z",
                "duration": 120,
                "recordingId": "e514f00268da41e1afe7f685f67e8181",
                "spokenBy": "ecfeeb757f0a4d47af1ebd513929264a",
                "languageCode": "en-IN",
                "transcriber": "google_speech_api",
                "status": "completed",
                "transcriptId": "f0cd207b-d967-4c5b-add1-ce100a9cb52a",
                "createdAt": "2019-10-31T12:01:43.250291064Z",
                "updatedAt": "2019-10-31T12:02:44.917201936Z",
                "deletedAt": null,
                "deleted": false
            }
        ]
    }
    }